// <auto-generated />
using System;
using KameGameAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KameGameAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211117092659_nullableStuff")]
    partial class nullableStuff
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KameGameAPI.Models.AddressModel", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PostCodeId")
                        .HasColumnType("int");

                    b.Property<string>("StreetNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("PostCodeId");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("KameGameAPI.Models.CardModel", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CardNumber")
                        .HasColumnType("int");

                    b.Property<int>("CardTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecurityNumber")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.HasIndex("CardTypeId");

                    b.ToTable("cards");
                });

            modelBuilder.Entity("KameGameAPI.Models.CardTypeModel", b =>
                {
                    b.Property<int>("CardTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardTypeId");

                    b.ToTable("cardTypes");
                });

            modelBuilder.Entity("KameGameAPI.Models.PostcodeModel", b =>
                {
                    b.Property<int>("PostcodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Postcode")
                        .HasColumnType("int");

                    b.HasKey("PostcodeId");

                    b.ToTable("postcodes");
                });

            modelBuilder.Entity("KameGameAPI.Models.RoleModel", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("KameGameAPI.Models.ShopModel", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Bought")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("userModelUserId")
                        .HasColumnType("int");

                    b.HasKey("ShopId");

                    b.HasIndex("userModelUserId");

                    b.ToTable("shops");
                });

            modelBuilder.Entity("KameGameAPI.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<int?>("CardId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UTLF")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("AddressId");

                    b.HasIndex("CardId");

                    b.HasIndex("RoleId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("KameGameAPI.Models.AddressModel", b =>
                {
                    b.HasOne("KameGameAPI.Models.PostcodeModel", "postCode")
                        .WithMany()
                        .HasForeignKey("PostCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("postCode");
                });

            modelBuilder.Entity("KameGameAPI.Models.CardModel", b =>
                {
                    b.HasOne("KameGameAPI.Models.CardTypeModel", "cardType")
                        .WithMany()
                        .HasForeignKey("CardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cardType");
                });

            modelBuilder.Entity("KameGameAPI.Models.ShopModel", b =>
                {
                    b.HasOne("KameGameAPI.Models.UserModel", "userModel")
                        .WithMany()
                        .HasForeignKey("userModelUserId");

                    b.Navigation("userModel");
                });

            modelBuilder.Entity("KameGameAPI.Models.UserModel", b =>
                {
                    b.HasOne("KameGameAPI.Models.AddressModel", "address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("KameGameAPI.Models.CardModel", "card")
                        .WithMany()
                        .HasForeignKey("CardId");

                    b.HasOne("KameGameAPI.Models.RoleModel", "role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("address");

                    b.Navigation("card");

                    b.Navigation("role");
                });
#pragma warning restore 612, 618
        }
    }
}
